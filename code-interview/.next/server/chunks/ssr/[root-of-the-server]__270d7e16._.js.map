{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 10, "column": 0}, "map": {"version":3,"sources":["file:///Users/christopheprat/Code/Side-projs/Hackathons/code-interview/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,IAAA,oOAAO,EAAC,IAAA,8LAAI,EAAC;AACtB","debugId":null}},
    {"offset": {"line": 25, "column": 0}, "map": {"version":3,"sources":["file:///Users/christopheprat/Code/Side-projs/Hackathons/code-interview/src/components/ui/resizable.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport { GripVerticalIcon } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction ResizablePanelGroup({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) {\n  return (\n    <ResizablePrimitive.PanelGroup\n      data-slot=\"resizable-panel-group\"\n      className={cn(\n        \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction ResizablePanel({\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.Panel>) {\n  return <ResizablePrimitive.Panel data-slot=\"resizable-panel\" {...props} />\n}\n\nfunction ResizableHandle({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) {\n  return (\n    <ResizablePrimitive.PanelResizeHandle\n      data-slot=\"resizable-handle\"\n      className={cn(\n        \"bg-border focus-visible:ring-ring relative flex w-px items-center justify-center after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:ring-1 focus-visible:ring-offset-1 focus-visible:outline-hidden data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:translate-x-0 data-[panel-group-direction=vertical]:after:-translate-y-1/2 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n        className\n      )}\n      {...props}\n    >\n      {withHandle && (\n        <div className=\"bg-border z-10 flex h-4 w-3 items-center justify-center rounded-xs border\">\n          <GripVerticalIcon className=\"size-2.5\" />\n        </div>\n      )}\n    </ResizablePrimitive.PanelResizeHandle>\n  )\n}\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n"],"names":[],"mappings":";;;;;;;;;AAGA;AACA;AAEA;AANA;;;;;AAQA,SAAS,oBAAoB,EAC3B,SAAS,EACT,GAAG,OACwD;IAC3D,qBACE,6WAAC,wXAA6B;QAC5B,aAAU;QACV,WAAW,IAAA,yHAAE,EACX,qEACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,eAAe,EACtB,GAAG,OACmD;IACtD,qBAAO,6WAAC,mXAAwB;QAAC,aAAU;QAAmB,GAAG,KAAK;;;;;;AACxE;AAEA,SAAS,gBAAgB,EACvB,UAAU,EACV,SAAS,EACT,GAAG,OAGJ;IACC,qBACE,6WAAC,+XAAoC;QACnC,aAAU;QACV,WAAW,IAAA,yHAAE,EACX,6oBACA;QAED,GAAG,KAAK;kBAER,4BACC,6WAAC;YAAI,WAAU;sBACb,cAAA,6WAAC,kUAAgB;gBAAC,WAAU;;;;;;;;;;;;;;;;AAKtC","debugId":null}},
    {"offset": {"line": 93, "column": 0}, "map": {"version":3,"sources":["file:///Users/christopheprat/Code/Side-projs/Hackathons/code-interview/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,IAAA,kPAAG,EACxB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,6SAAI,GAAG;IAE9B,qBACE,6WAAC;QACC,aAAU;QACV,WAAW,IAAA,yHAAE,EAAC,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 153, "column": 0}, "map": {"version":3,"sources":["file:///Users/christopheprat/Code/Side-projs/Hackathons/code-interview/src/app/runner.ts"],"sourcesContent":["export function runCode(code: string, testCases: any[]) {\n  return new Promise((resolve, reject) => {\n    const worker = new Worker(new URL(\"./worker.ts\", import.meta.url));\n\n    worker.onmessage = (e) => {\n      resolve(e.data);\n      worker.terminate();\n    };\n\n    worker.onerror = (e) => {\n      reject(e.message);\n      worker.terminate();\n    };\n\n    worker.postMessage({ code, testCases });\n  });\n}\n"],"names":[],"mappings":";;;;;;;;;AAAO,SAAS,QAAQ,IAAY,EAAE,SAAgB;IACpD,OAAO,IAAI,QAAQ,CAAC,SAAS;QAC3B,MAAM,SAAS,IAAI;QAEnB,OAAO,SAAS,GAAG,CAAC;YAClB,QAAQ,EAAE,IAAI;YACd,OAAO,SAAS;QAClB;QAEA,OAAO,OAAO,GAAG,CAAC;YAChB,OAAO,EAAE,OAAO;YAChB,OAAO,SAAS;QAClB;QAEA,OAAO,WAAW,CAAC;YAAE;YAAM;QAAU;IACvC;AACF","debugId":null}},
    {"offset": {"line": 183, "column": 0}, "map": {"version":3,"sources":["file:///Users/christopheprat/Code/Side-projs/Hackathons/code-interview/src/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport Editor from \"react-simple-code-editor\";\nimport { highlight, languages } from \"prismjs/components/prism-core\";\nimport \"prismjs/components/prism-clike\";\nimport \"prismjs/components/prism-javascript\";\nimport \"prismjs/themes/prism.css\"; //Example style, you can use another\n\nimport {\n    ResizableHandle,\n    ResizablePanel,\n    ResizablePanelGroup,\n} from \"@/components/ui/resizable\";\nimport {\n    Card,\n    CardContent,\n    CardDescription,\n    CardFooter,\n    CardHeader,\n    CardTitle,\n} from \"@/components/ui/card\";\nimport React from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { runCode } from \"./runner\";\n\nexport default function Home() {\n    const [code, setCode] = React.useState(\n        `function twoSum(nums, target) {\\n  // Write your code here\\n}`,\n    );\n    const [output, setOutput] = React.useState<any>(null);\n\n    const testCases = [\n        { input: { nums: [2, 7, 11, 15], target: 9 }, output: [0, 1] },\n        { input: { nums: [3, 2, 4], target: 6 }, output: [1, 2] },\n        { input: { nums: [3, 3], target: 6 }, output: [0, 1] },\n    ];\n\n    const handleRunCode = async () => {\n        const result = await runCode(code, testCases);\n        setOutput(result);\n    };\n\n    return (\n        <>\n            <head>\n                <title>Code Interview</title>\n            </head>\n            <ResizablePanelGroup\n                direction=\"horizontal\"\n                className=\"min-h-screen min-w-screen\"\n            >\n                <ResizablePanel defaultSize={50}>\n                    <div className=\"flex h-full items-center justify-center p-6\">\n                        <Card className=\"h-full w-full\">\n                            <CardHeader>\n                                <CardTitle>Two Sum</CardTitle>\n                                <CardDescription>Easy</CardDescription>\n                            </CardHeader>\n                            <CardContent>\n                                <p>\n                                    Given an array of integers `nums` and an\n                                    integer `target`, return *indices of the two\n                                    numbers such that they add up to `target`*.\n                                </p>\n                                <p>\n                                    You may assume that each input would have\n                                    **exactly one solution**, and you may not\n                                    use the same element twice.\n                                </p>\n                                <p>You can return the answer in any order.</p>\n                                <p></p>\n                                <p></p>\n                                <p>**Example 1:**</p>\n                                <p></p>\n                                <p>Input: nums = [2,7,11,15], target = 9</p>\n                                <p>Output: [0,1]</p>\n                                <p>\n                                    Explanation: Because nums[0] + nums[1] == 9,\n                                    we return [0, 1].\n                                </p>\n                            </CardContent>\n                        </Card>\n                    </div>\n                </ResizablePanel>\n                <ResizableHandle withHandle />\n                <ResizablePanel defaultSize={50}>\n                    <div className=\"flex h-full flex-col p-6\">\n                        <Card className=\"h-full w-full\">\n                            <CardHeader>\n                                <CardTitle>Code Editor</CardTitle>\n                            </CardHeader>\n                            <CardContent className=\"h-3/4\">\n                                <Editor\n                                    value={code}\n                                    onValueChange={(code) => setCode(code)}\n                                    highlight={(code) =>\n                                        highlight(code, languages.js)\n                                    }\n                                    padding={10}\n                                    style={{\n                                        fontFamily:\n                                            '\"Fira code\", \"Fira Mono\", monospace',\n                                        fontSize: 12,\n                                        border: \"1px solid #ddd\",\n                                        borderRadius: \"4px\",\n                                        height: \"100%\",\n                                    }}\n                                />\n                            </CardContent>\n                            <CardFooter>\n                                <Button onClick={handleRunCode}>\n                                    Run Code\n                                </Button>\n                            </CardFooter>\n                        </Card>\n                        {output && (\n                            <Card className=\"h-1/4 w-full mt-4\">\n                                <CardHeader>\n                                    <CardTitle>Output</CardTitle>\n                                </CardHeader>\n                                <CardContent>\n                                    {output.error && (\n                                        <p className=\"text-red-500\">\n                                            {output.error}\n                                        </p>\n                                    )}\n                                    {output.results &&\n                                        output.results.map(\n                                            (result: any, index: number) => (\n                                                <div key={index}>\n                                                    <p>\n                                                        Test Case {index + 1}:{\" \"}\n                                                        {result.success\n                                                            ? \"✅\"\n                                                            : \"❌\"}\n                                                    </p>\n                                                    <p>\n                                                        Input:{\" \"}\n                                                        {JSON.stringify(\n                                                            result.input,\n                                                        )}\n                                                    </p>\n                                                    <p>\n                                                        Expected:{\" \"}\n                                                        {JSON.stringify(\n                                                            result.expected,\n                                                        )}\n                                                    </p>\n                                                    <p>\n                                                        Actual:{\" \"}\n                                                        {JSON.stringify(\n                                                            result.actual,\n                                                        )}\n                                                    </p>\n                                                </div>\n                                            ),\n                                        )}\n                                </CardContent>\n                            </Card>\n                        )}\n                    </div>\n                </ResizablePanel>\n            </ResizablePanelGroup>\n        </>\n    );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}
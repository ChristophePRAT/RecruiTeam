{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 139, "column": 0}, "map": {"version":3,"sources":["file:///Users/christopheprat/Code/Side-projs/Hackathons/code-interview/src/app/voice/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useRef, useCallback } from \"react\";\nimport { RealtimeAgent, RealtimeSession } from \"@openai/agents/realtime\";\n\nexport default function VoiceAgent() {\n    const [isConnected, setIsConnected] = useState(false);\n    const [isConnecting, setIsConnecting] = useState(false);\n    const [error, setError] = useState<string | null>(null);\n    const [isSpeaking, setIsSpeaking] = useState(false);\n    const sessionRef = useRef<RealtimeSession | null>(null);\n\n    const createSession = useCallback(async () => {\n        try {\n            setIsConnecting(true);\n            setError(null);\n\n            // Get ephemeral token from your API route\n            const tokenResponse = await fetch(\"/api/realtime-token\", {\n                method: \"POST\",\n            });\n\n            if (!tokenResponse.ok) {\n                console.error(tokenResponse);\n                throw new Error(\"Failed to get client token\");\n            }\n\n            const { clientSecret } = await tokenResponse.json();\n\n            // Create the voice agent\n            const agent = new RealtimeAgent({\n                name: \"Assistant\",\n                instructions:\n                    \"You are a helpful voice assistant. Speak naturally and conversationally. Keep responses concise and engaging.\",\n            });\n\n            // Create and connect the session\n            const session = new RealtimeSession(agent, {\n                model: \"gpt-realtime\",\n            });\n\n            // Set up event listeners\n            session.on(\"connected\", () => {\n                console.log(\"Session connected\");\n                setIsConnected(true);\n                setIsConnecting(false);\n            });\n\n            session.on(\"disconnected\", () => {\n                console.log(\"Session disconnected\");\n                setIsConnected(false);\n                setIsConnecting(false);\n            });\n\n            session.on(\"error\", (error) => {\n                console.error(\"Session error:\", error);\n                setError(error.message);\n                setIsConnecting(false);\n            });\n\n            // Listen for when the agent starts/stops speaking\n            session.on(\"agent.speaking.started\", () => {\n                setIsSpeaking(true);\n            });\n\n            session.on(\"agent.speaking.stopped\", () => {\n                setIsSpeaking(false);\n            });\n\n            // Connect to the session\n            await session.connect({\n                apiKey: clientSecret,\n            });\n\n            sessionRef.current = session;\n        } catch (err) {\n            console.error(\"Failed to create session:\", err);\n            setError(err instanceof Error ? err.message : \"Failed to connect\");\n            setIsConnecting(false);\n        }\n    }, []);\n\n    const disconnect = useCallback(async () => {\n        if (sessionRef.current) {\n            await sessionRef.current.disconnect();\n            sessionRef.current = null;\n        }\n        setIsConnected(false);\n        setIsSpeaking(false);\n    }, []);\n\n    const handleToggleConnection = useCallback(async () => {\n        if (isConnected) {\n            await disconnect();\n        } else {\n            await createSession();\n        }\n    }, [isConnected, createSession, disconnect]);\n\n    return (\n        <div className=\"flex flex-col items-center justify-center min-h-screen bg-gray-100 p-8\">\n            <div className=\"bg-white rounded-2xl shadow-lg p-8 max-w-md w-full\">\n                <h1 className=\"text-3xl font-bold text-center mb-8 text-gray-800\">\n                    Voice Agent\n                </h1>\n\n                {error && (\n                    <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\">\n                        {error}\n                    </div>\n                )}\n\n                <div className=\"text-center mb-8\">\n                    <div\n                        className={`mx-auto w-24 h-24 rounded-full flex items-center justify-center mb-4 transition-all duration-300 ${\n                            isSpeaking\n                                ? \"bg-green-500 animate-pulse\"\n                                : isConnected\n                                  ? \"bg-blue-500\"\n                                  : \"bg-gray-300\"\n                        }`}\n                    >\n                        <svg\n                            className=\"w-10 h-10 text-white\"\n                            fill=\"currentColor\"\n                            viewBox=\"0 0 20 20\"\n                        >\n                            <path\n                                fillRule=\"evenodd\"\n                                d=\"M7 4a3 3 0 016 0v4a3 3 0 11-6 0V4zm4 10.93A7.001 7.001 0 0017 8a1 1 0 10-2 0A5 5 0 015 8a1 1 0 00-2 0 7.001 7.001 0 006 6.93V17H6a1 1 0 100 2h8a1 1 0 100-2h-3v-2.07z\"\n                                clipRule=\"evenodd\"\n                            />\n                        </svg>\n                    </div>\n\n                    <p className=\"text-sm text-gray-600 mb-2\">\n                        {isConnecting\n                            ? \"Connecting...\"\n                            : isConnected\n                              ? isSpeaking\n                                  ? \"Assistant is speaking...\"\n                                  : \"Listening... Start talking!\"\n                              : \"Ready to connect\"}\n                    </p>\n\n                    <p className=\"text-xs text-gray-500\">\n                        {isConnected\n                            ? \"You can interrupt the assistant anytime\"\n                            : \"Grant microphone permission when prompted\"}\n                    </p>\n                </div>\n\n                <button\n                    onClick={handleToggleConnection}\n                    disabled={isConnecting}\n                    className={`w-full py-3 px-6 rounded-lg font-semibold transition-all duration-200 ${\n                        isConnected\n                            ? \"bg-red-500 hover:bg-red-600 text-white\"\n                            : \"bg-blue-500 hover:bg-blue-600 text-white disabled:bg-gray-400 disabled:cursor-not-allowed\"\n                    }`}\n                >\n                    {isConnecting\n                        ? \"Connecting...\"\n                        : isConnected\n                          ? \"Disconnect\"\n                          : \"Start Voice Chat\"}\n                </button>\n\n                {isConnected && (\n                    <div className=\"mt-4 text-xs text-gray-500 text-center\">\n                        <p>• Speak naturally to the assistant</p>\n                        <p>• The assistant will respond with voice</p>\n                        <p>• You can interrupt at any time</p>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}
{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 49, "column": 0}, "map": {"version":3,"sources":["file:///Users/christopheprat/Code/Side-projs/Hackathons/code-interview/src/app/api/realtime-token/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from \"next/server\";\n\nexport function GET(request: NextRequest) {\n    console.log(\"IJSDPOIASJFPOIJE\");\n    return NextResponse.json({ msg: \"hello\" });\n}\n\nexport async function POST(request: NextRequest) {\n    console.log(\"POSTED TO here\");\n    try {\n        const response = await fetch(\n            \"https://api.openai.com/v1/realtime/client_secrets\",\n            {\n                method: \"POST\",\n                headers: {\n                    Authorization: `Bearer ${process.env.OPENAI_API_KEY}`,\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({\n                    session: {\n                        type: \"realtime\",\n                        model: \"gpt-realtime\",\n                    },\n                }),\n            },\n        );\n\n        const data = await response.json();\n\n        if (!response.ok) {\n            throw new Error(\n                data.error?.message || \"Failed to create client secret\",\n            );\n        }\n\n        return NextResponse.json({\n            clientSecret: data.client_secret.value,\n        });\n    } catch (error) {\n        console.error(\"Error creating realtime token:\", error);\n        return NextResponse.json(\n            { error: \"Failed to create realtime token\" },\n            { status: 500 },\n        );\n    }\n}\n"],"names":[],"mappings":";;;;;;AAAA;;AAEO,SAAS,IAAI,OAAoB;IACpC,QAAQ,GAAG,CAAC;IACZ,OAAO,uTAAY,CAAC,IAAI,CAAC;QAAE,KAAK;IAAQ;AAC5C;AAEO,eAAe,KAAK,OAAoB;IAC3C,QAAQ,GAAG,CAAC;IACZ,IAAI;QACA,MAAM,WAAW,MAAM,MACnB,qDACA;YACI,QAAQ;YACR,SAAS;gBACL,eAAe,CAAC,OAAO,EAAE,QAAQ,GAAG,CAAC,cAAc,EAAE;gBACrD,gBAAgB;YACpB;YACA,MAAM,KAAK,SAAS,CAAC;gBACjB,SAAS;oBACL,MAAM;oBACN,OAAO;gBACX;YACJ;QACJ;QAGJ,MAAM,OAAO,MAAM,SAAS,IAAI;QAEhC,IAAI,CAAC,SAAS,EAAE,EAAE;YACd,MAAM,IAAI,MACN,KAAK,KAAK,EAAE,WAAW;QAE/B;QAEA,OAAO,uTAAY,CAAC,IAAI,CAAC;YACrB,cAAc,KAAK,aAAa,CAAC,KAAK;QAC1C;IACJ,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,kCAAkC;QAChD,OAAO,uTAAY,CAAC,IAAI,CACpB;YAAE,OAAO;QAAkC,GAC3C;YAAE,QAAQ;QAAI;IAEtB;AACJ","debugId":null}}]
}